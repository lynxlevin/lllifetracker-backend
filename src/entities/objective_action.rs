//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "objective_action")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub objective_id: Uuid,
    pub action_id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::action::Entity",
        from = "Column::ActionId",
        to = "super::action::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Action,
    #[sea_orm(
        belongs_to = "super::objective::Entity",
        from = "Column::ObjectiveId",
        to = "super::objective::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Objective,
}

impl Related<super::action::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Action.def()
    }
}

impl Related<super::objective::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Objective.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
